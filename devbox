#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail

function ensureAnsible() {
    ###################
    # Install ansible #
    if ! grep -q "ansible/ansible" /etc/apt/sources.list /etc/apt/sources.list.d/*; then
        echo "Adding Ansible PPA"
        sudo apt-add-repository ppa:ansible/ansible -y
    fi

    if ! hash ansible >/dev/null 2>&1; then
        echo "Installing Ansible..."
        sudo apt-get update
        sudo apt-get install software-properties-common ansible git python-apt -y
    else
        echo "Ansible already installed"
    fi
}

if which python3 >/dev/null 2>&1; then
  PYTHON=$(which python3)
else
  PYTHON=$(which python)
fi

echo "                                     ./////,                    "
echo "                                 ./////==//////*                "
echo "                                ////.  ___   ////.              "
echo "                         ,**,. ////  ,////A,  */// ,**,.        "
echo "                    ,/////////////*  */////*  *////////////A    "
echo "                   ////'        \VA.   '|'   .///'       '///*  "
echo "                  *///  .*///*,         |         .*//*,   ///* "
echo "                  (///  (//////)**--_./////_----*//////)   ///) "
echo "                   V///   '°°°°      (/////)      °°°°'   ////  "
echo "                    V/////(////////\. '°°°' ./////////(///(/'   "
echo "                       'V/(/////////////////////////////V'      "

ensureAnsible

#####################################
# Display real installation process #
echo ""
echo "Customize the playbook ansible-desktop.yml to suit your needs, then run ansible with :"
echo " ansible-playbook playbook.yml --ask-become-pass --extra-vars=vars.yml -e ansible_python_interpreter=${PYTHON} --connection local -i localhost"
echo ""

